- name: Deploy services
  hosts: masters

  vars:
    service_state: present
    cfgs_dir_name: src
    src_path: '..'
    cfgs_dest_path: /tmp
    cfgs_src_path: '{{ src_path }}/{{ cfgs_dir_name }}'
    cfgs: '{{ cfgs_dest_path }}/{{ cfgs_dir_name }}'

  tasks:
    - name: Copy HELM values files
      tags: [always]
      copy:
        src: '{{ cfgs_src_path }}/helm'
        dest: '{{ cfgs }}'
      when: service_state == "present"

    - name: Service Traefik
      tags: [traefik]
      block:
        - name: Add Traefik repository
          kubernetes.core.helm_repository:
            binary_path: /snap/bin/helm
            repo_name: traefik
            repo_url: https://traefik.github.io/charts
            state: '{{ service_state }}'

        - name: Install Traefik Helm
          kubernetes.core.helm:
            binary_path: /snap/bin/helm
            name: traefik
            chart_ref: traefik/traefik
            # chart_version: v3.1.6
            update_repo_cache: '{{ service_state == "present" }}'
            release_namespace: default
            values_files:
              - '{{ cfgs }}/helm/traefik-values.yaml'
            state: '{{ service_state }}'

        - name: Apply Traefik Resources
          kubernetes.core.k8s:
            namespace: default
            definition: "{{ lookup('file', '{{ item }}') | from_yaml_all }}"
            state: '{{ service_state }}'
          with_fileglob:
            - '{{ cfgs_src_path }}/k8s/traefik-*.yaml'

    - name: Service Authentik
      tags: [authentik]
      block:
        - name: Add a Authentik repository
          kubernetes.core.helm_repository:
            binary_path: /snap/bin/helm
            repo_name: authentik
            repo_url: https://charts.goauthentik.io
            state: '{{ service_state }}'

        - name: Install Authentik Helm
          kubernetes.core.helm:
            binary_path: /snap/bin/helm
            name: authentik
            chart_ref: authentik/authentik
            chart_version: 2024.8.3
            update_repo_cache: '{{ service_state == "present" }}'
            release_namespace: default
            values_files:
              - '{{ cfgs }}/helm/authentik-values.yaml'
            values:
              authentik:
                bootstrap_email: '{{ authentik.email }}'
                bootstrap_password: '{{ authentik.password }}'
                bootstrap_token: '{{ authentik.token }}'
            state: '{{ service_state }}'

    - name: Service Media Storage
      tags: [mediastorage, jellyfin, radarr, sonarr, transmission]
      block:
        - name: Apply Media Storage Resources
          kubernetes.core.k8s:
            namespace: default
            definition: "{{ lookup('file', '{{ item }}') | from_yaml_all }}"
            state: '{{ service_state }}'
          with_fileglob:
            - '{{ cfgs_src_path }}/k8s/mediastorage-*.yaml'
      when: service_state == "present"

    - name: Service Jellyfin
      tags: [jellyfin]
      block:
        - name: Install Jellyfin Helm
          vars:
            tc_name: jellyfin
          kubernetes.core.helm:
            binary_path: /snap/bin/helm
            name: '{{ tc_name }}'
            chart_ref: oci://tccr.io/truecharts/{{ tc_name }}
            release_namespace: default
            values_files:
              - '{{ cfgs }}/helm/{{ tc_name }}-values.yaml'
            state: '{{ service_state }}'

    - name: Service Sonarr
      tags: [sonarr]
      block:
        - name: Install Sonarr Helm
          vars:
            tc_name: sonarr
          kubernetes.core.helm:
            binary_path: /snap/bin/helm
            name: '{{ tc_name }}'
            chart_ref: oci://tccr.io/truecharts/{{ tc_name }}
            release_namespace: default
            values_files:
              - '{{ cfgs }}/helm/{{ tc_name }}-values.yaml'
            state: '{{ service_state }}'

    - name: Service Radarr
      tags: [radarr]
      block:
        - name: Install Radarr Helm
          vars:
            tc_name: radarr
          kubernetes.core.helm:
            binary_path: /snap/bin/helm
            name: '{{ tc_name }}'
            chart_ref: oci://tccr.io/truecharts/{{ tc_name }}
            release_namespace: default
            values_files:
              - '{{ cfgs }}/helm/{{ tc_name }}-values.yaml'
            state: '{{ service_state }}'

    - name: Service Jackett
      tags: [jackett]
      block:
        - name: Install Jackett Helm
          vars:
            tc_name: jackett
          kubernetes.core.helm:
            binary_path: /snap/bin/helm
            name: '{{ tc_name }}'
            chart_ref: oci://tccr.io/truecharts/{{ tc_name }}
            release_namespace: default
            values_files:
              - '{{ cfgs }}/helm/{{ tc_name }}-values.yaml'
              - '{{ cfgs }}/helm/commons-gluetun-values.yaml'
            values:
              openvpn:
                username: '{{ openvpn.username }}'
                password: '{{ openvpn.password }}'
            state: '{{ service_state }}'

    - name: Service Transmission
      tags: [transmission]
      block:
        - name: Install Transmission Helm
          vars:
            tc_name: transmission
          kubernetes.core.helm:
            binary_path: /snap/bin/helm
            name: '{{ tc_name }}'
            chart_ref: oci://tccr.io/truecharts/{{ tc_name }}
            release_namespace: default
            values_files:
              - '{{ cfgs }}/helm/{{ tc_name }}-values.yaml'
              - '{{ cfgs }}/helm/commons-gluetun-values.yaml'
            values:
              openvpn:
                username: '{{ openvpn.username }}'
                password: '{{ openvpn.password }}'
            state: '{{ service_state }}'
