- name: Deploy services
  hosts: masters

  vars:
    service_state: present
    cfgs_name: configs
    cfgs_src: '..'
    cfgs_dest: /tmp
    cfgs_src_path: '{{ cfgs_src }}/{{ cfgs_name }}'
    cfgs: '{{ cfgs_dest }}/{{ cfgs_name }}'

  tasks:
    - name: Copy HELM values files
      tags: [always]
      copy:
        src: '{{ cfgs_src_path }}/helm'
        dest: '{{ cfgs }}'

    - name: Service Traefik
      tags: [traefik]
      block:
        - name: Add a Traefik repository
          kubernetes.core.helm_repository:
            binary_path: /snap/bin/helm
            repo_name: traefik
            repo_url: https://traefik.github.io/charts
            state: '{{ service_state }}'

        - name: Install Traefik Helm
          kubernetes.core.helm:
            binary_path: /snap/bin/helm
            name: traefik
            chart_ref: traefik/traefik
            # chart_version: v3.1.6
            update_repo_cache: true
            release_namespace: default
            values_files:
              - '{{ cfgs }}/helm/traefik-values.yaml'
            state: '{{ service_state }}'

        - name: Apply kubernetes configuration
          kubernetes.core.k8s:
            namespace: default
            definition: "{{ lookup('file', '{{ item }}') | from_yaml_all }}"
            state: '{{ service_state }}'
          with_fileglob:
            - '{{ cfgs_src_path }}/k8s/traefik-*.yaml'

    #- name: Service Authentik
    #  tags: [authentik]
    #  block:

    - name: Service Media Storage
      tags: [mediastorage]
      block:
        - name: Apply kubernetes configuration
          kubernetes.core.k8s:
            namespace: default
            definition: "{{ lookup('file', '{{ item }}') | from_yaml_all }}"
            state: '{{ service_state }}'
          with_fileglob:
            - '{{ cfgs_src_path }}/k8s/mediastorage-*.yaml'

    - name: Service Transmission
      tags: [transmission]
      block:
        - name: Install Helm
          vars:
            tc_name: transmission
          kubernetes.core.helm:
            binary_path: /snap/bin/helm
            name: '{{ tc_name }}'
            chart_ref: oci://tccr.io/truecharts/{{ tc_name }}
            release_namespace: default
            values_files:
              - '{{ cfgs }}/helm/{{ tc_name }}-values.yaml'
              - '{{ cfgs }}/helm/commons-gluetun-values.yaml'
            state: '{{ service_state }}'

    - name: Service Jellyfin
      tags: [jellyfin]
      block:
        - name: Install Helm
          vars:
            jellyfin_version: 1.3.0
          kubernetes.core.helm:
            binary_path: /snap/bin/helm
            name: jellyfin
            chart_ref: https://github.com/jellyfin/jellyfin-helm/releases/download/jellyfin-{{ jellyfin_version }}/jellyfin-{{ jellyfin_version }}.tgz
            release_namespace: default
            values_files:
              - '{{ cfgs }}/helm/jellyfin-values.yaml'
            state: '{{ service_state }}'

    - name: Service Sonarr
      tags: [sonarr]
      block:
        - name: Install Helm
          vars:
            tc_name: sonarr
          kubernetes.core.helm:
            binary_path: /snap/bin/helm
            name: '{{ tc_name }}'
            chart_ref: oci://tccr.io/truecharts/{{ tc_name }}
            release_namespace: default
            values_files:
              - '{{ cfgs }}/helm/{{ tc_name }}-values.yaml'
            state: '{{ service_state }}'

    - name: Service Radarr
      tags: [radarr]
      block:
        - name: Install Helm
          vars:
            tc_name: radarr
          kubernetes.core.helm:
            binary_path: /snap/bin/helm
            name: '{{ tc_name }}'
            chart_ref: oci://tccr.io/truecharts/{{ tc_name }}
            release_namespace: default
            values_files:
              - '{{ cfgs }}/helm/{{ tc_name }}-values.yaml'
            state: '{{ service_state }}'

    #- name: Service Jackett
    #  tags: [jackett]
    #  block:
    #    - name: Install Helm
    #      vars:
    #        tc_name: jackett
    #      kubernetes.core.helm:
    #        binary_path: /snap/bin/helm
    #        name: '{{ tc_name }}'
    #        chart_ref: oci://tccr.io/truecharts/{{ tc_name }}
    #        release_namespace: default
    #        values_files:
    #          - '{{ cfgs }}/helm/{{ tc_name }}-values.yaml'
    #        state: '{{ service_state }}'
